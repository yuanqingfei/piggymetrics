server:
  servlet:
    context-path: /notifications
  port: 8000

remind:
  cron: 0 0 0 * * *
  email:
    text: "Hey, {0}! We''ve missed you here on PiggyMetrics. It''s time to check your budget statistics.\r\n\r\nCheers,\r\nPiggyMetrics team"
    subject: PiggyMetrics reminder

backup:
  cron: 0 0 12 * * *
  email:
    text: "Howdy, {0}. Your account backup is ready.\r\n\r\nCheers,\r\nPiggyMetrics team"
    subject: PiggyMetrics account backup
    attachment: backup.json

spring:
  data:
    mongodb:
      host: localhost
      username: user
      password: password
      database: piggymetrics
      port: 27017
  mail:
    host: smtp.gmail.com
    port: 465
    username: dev-user
    password: dev-password
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          ssl:
            enable: true             
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:5000/uaa/oauth2/jwks
      client:
        registration:
          notification-service: 
            provider: spring
            client-id: notification-service
            client-secret: notification_secret
            authorization-grant-type: client_credentials
            scope: server
        provider:
          spring: 
            authorization-uri: http://localhost:5000/uaa/oauth2/authorize
            token-uri: http://localhost:5000/uaa/oauth2/token
            jwk-set-uri: http://localhost:5000/uaa/oauth2/jwks


feign:
  client:
    refresh-enabled: true
  circuitbreaker:
    enabled: false
  compression:
    request:
      enabled: true
      mime-types: application/json
    response:
      enabled: true
  client.config.default:
    connectTimeout: 1000
    readTimeout: 60000
    decode404: false